To do:
 - make sure things work as anonymous users (right now, things fail).
 - ensure that URL/POST data hacking can't edit other user's stuff
 - make sure that we're properly filtering on the users, so that favorites are
   user-specific.
 - add a link from the faves page back to the document
 - add the search text to the search box on results/docs pages

Tests:
 - check for print statements! check for the word tag.
 - check for sys.path statements that can get nixed.
 - what happens when input is too long in the form field?
 - does text get truncated properly on the profile --> favorite page?

Post-go-live:
 - Flat page at /remove/ needs to exist.
 - May need to run this: grant drop on django_alerts.* to 'django-alerts'@'localhost' identified by 'asdfaiwueiocOIUCWLEiasdfjLOIiaj87a23876a&^&9';


Favorites spec:

Page is loaded:
    if user is logged in and page is favorite:
        DONE - Display the gold star
        DONE - In the sidebar, load any notes or tags they have for the item.
    else:
        display the hollow star, with a popup asking the user to log in.

Favorites page is loaded:
    List the favorites with casename, tags and notes. Provide a delete link,
        which deletes the item with a confirm box (using the same code as above).
        After an item is deleted, use JS to remove it from the list.

Delete account mechanism needs to be updated to delete a user's favorites.
