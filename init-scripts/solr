 #!/bin/sh

# Prerequisites:
# 1. Solr needs to be installed at /usr/local/solr/example
# 2. daemon needs to be installed
# 3. Script needs to be executed by root

# This script will launch Solr in a mode that will automatically respawn if it
# crashes. Output will be sent to /var/log/solr/solr.log. A pid file will be
# created in the standard location.

start () {
    echo -n "Starting solr..."

    # Use python to determine if this is a dev machine
    . /etc/environment
    if [ -z $CL_INSTALL_ROOT ]; then
      echo "CL_INSTALL_ROOT is not set. Please set it in /etc/environment."
      exit 1
    fi
    cd $CL_INSTALL_ROOT/alert
    DEV=`python -c 'import settings;
from django.core.management import setup_environ;
setup_environ(settings);
print settings.DEVELOPMENT;'`

    if [ $DEV = 'True' ]
    then
        xmx=500M
    else
        xmx=5G
    fi

    # start daemon
    daemon --chdir='/usr/local/solr/example' --command "java -jar -server -Xmx$xmx start.jar -DCL_INSTALL_ROOT=$CL_INSTALL_ROOT" --respawn --output=/var/log/solr/solr.log --name=solr --verbose

    RETVAL=$?
    if [ $RETVAL = 0 ]
    then
        echo "done."
    else
        echo "failed. See error code for more information."
    fi
    return $RETVAL
}

stop () {
    # stop daemon
    echo -n "Stopping solr..."

    daemon --stop --name=solr  --verbose
    RETVAL=$?

    if [ $RETVAL = 0 ]
    then
        echo "done."
    else
        echo "failed. See error code for more information."
    fi
    return $RETVAL
}


restart () {
    daemon --restart --name=solr  --verbose
}


status () {
    # report on the status of the daemon
    daemon --running --verbose --name=solr
    return $?
}


case "$1" in
    start)
        start
    ;;
    status)
        status
    ;;
    stop)
        stop
    ;;
    restart)
        stop
        sleep 15
        start
    ;;
    *)
        echo $"Usage: solr {start|status|stop|restart}"
        exit 3
    ;;
esac

exit $RETVAL
